#+TITLE: Flox Resolver

Resolve Nix packages from flakes and catalogs from a set of requirements.

** Quick Start

#+BEGIN_SRC
Usage: resolver [-h] [--one] [--quiet] [--inputs INPUTS] [--preferences PREFERENCES] --descriptor DESCRIPTOR

Resolve nix package descriptors in flakes

Optional arguments:
  -h, --help                    shows help message and exits
  -v, --version                 prints version information and exits
  -o, --one                     return single resolved entry or `null'
  -q, --quiet                   exit 0 even if no resolutions are found
  -i, --inputs INPUTS           inline JSON or path to JSON file containing flake references [default: "{"nixpkgs":"github:NixOS/nixpkgs","nixpkgs-flox":"github:flox/nixpkgs-flox","floxpkgs":"github:flox/floxpkgs"}"]
  -p, --preferences PREFERENCES inline JSON or path to JSON file containing resolver preferences [default: "{}"]
  -d, --descriptor DESCRIPTOR   inline JSON or path to JSON file containing a package descriptor [required]
#+END_SRC

#+BEGIN_SRC shell
$ ./bin/resolver -i '{"nixpkgs":"github:NixOS/nixpkgs"}' -d '{"name":"hello","version":"2.12.1"}'|jq;
[
  {
    "info": {
      "names": {
        "aarch64-darwin": "hello",
        "aarch64-linux": "hello",
        "x86_64-darwin": "hello",
        "x86_64-linux": "hello"
      },
      "semvers": {
        "aarch64-darwin": "2.12.1",
        "aarch64-linux": "2.12.1",
        "x86_64-darwin": "2.12.1",
        "x86_64-linux": "2.12.1"
      },
      "systems": [
        "aarch64-darwin",
        "x86_64-darwin",
        "aarch64-linux",
        "x86_64-linux"
      ],
      "versions": {
        "aarch64-darwin": "2.12.1",
        "aarch64-linux": "2.12.1",
        "x86_64-darwin": "2.12.1",
        "x86_64-linux": "2.12.1"
      }
    },
    "input": {
      "lastModified": 1686600087,
      "narHash": "sha256-vvKp4tIiKxm9fXh+Ndi6o1KzSuVhscy48/w93YHVL2M=",
      "owner": "NixOS",
      "repo": "nixpkgs",
      "rev": "80a3b4b7de2fa0570904c1e4bea7fda58be60c5d",
      "type": "github"
    },
    "path": [
      "legacyPackages",
      null,
      "hello"
    ],
    "uri": "github:NixOS/nixpkgs/80a3b4b7de2fa0570904c1e4bea7fda58be60c5d#legacyPackages.{{system}}.hello"
  }
]
#+END_SRC


** Preferences

These settings control resolution behaviors, particularly priority ordering for
inputs and attribute-set prefixes to search under.

All of these fields are optional, and when left unset fallbacks will be used.

Remember that in addition to these preferences, the resolver carries a second
structure with information about inputs.
In our preferences we may refer to those inputs using their "alias"
or short-name.


** Example Settings

#+BEGIN_SRC json
{
  "inputs": ["nixpkgs", "nixpkgs-flox"],
  "allow": {
    "unfree":   false,
    "broken":   false,
    "licenses": ["MIT" "GPL3"]
  },
  "semver": {
    "preferPreReleases": true
  },
  "prefixes": {
    "nixpkgs":      ["legacyPackages", "packages", "catalog"],
    "nixpkgs-flox": ["catalog", "packages", "legacyPackages"]
  },
  "stabilities": {
    "nixpkgs-flox": ["unstable", "staging", "unstable"]
  }
}
#+END_SRC


** TODO
- [ ] Semantic version filtering.
- [ ] Read Inputs from =flake.lock= and =registry.json=.
- [ ] Parse descriptor strings.
- [ ] Optimize with supplemental database.
- [ ] Stability filtering.
- [ ] Optimize resolution by =path=.
- [ ] More sensible =info= structure.
- [ ] Additional tests.
- [ ] Document descriptor fields.
